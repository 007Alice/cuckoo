{"version":3,"sources":["src/filetree.js"],"names":[],"mappings":"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","file":"filetree.js","sourcesContent":["class FileTree {\n    constructor(target, convert_data) {\n        this.sel_target = target;\n        this.data = null;\n        this._convert_data = convert_data;\n\n        this._jstree = null;\n        this._filters = {\n            simplify_mime: true,\n            simplify_magic: true,\n            simplify_sizes: true,\n            deselect_duplicates: true\n        };\n\n        this.info = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0\n        };\n    }\n\n\n    /**\n     * Draws the table\n     */\n    draw(data, callback){\n        if (!this.sel_target) throw \"drawtarget needed\";\n        this.data = data;\n\n        this.init();\n        callback();\n    }\n\n    _convert_entry(entry){\n        let _self = this;\n\n        // Temporary object\n        let obj = {\n            filepath: entry.filepath,\n            filename: entry.filename,\n            type: entry.type,\n            state: false, // pre-selected tree item\n            size: entry.size,\n            duplicate: entry.duplicate,\n            opened: false\n        };\n\n        if(obj.type != \"directory\"){\n            obj.magic = entry.finger.magic;\n            obj.mime = entry.finger.mime;\n        }\n\n        // Sanitize object properties\n        if(obj.magic){\n            if(obj.magic.length >= 170){ obj.magic = `${obj.magic.substring(0, 170)}...`; }\n        } else {\n            obj.magic = \"empty\";\n        }\n\n        [\".exe\", \".pdf\", \".vbs\", \".vba\", \".bat\", \".py\", \".pyc\", \".pl\", \".rb\", \"js\", \".jse\"].forEach(function (x) {\n            if (obj.filepath.endsWith(x)) {\n                obj.type = \"exec\";\n                obj.state = true;\n\n                _self.info.executables += 1;\n            }\n        });\n\n        [\".doc\", \".docx\", \".docm\", \".dotx\", \".dotm\", \".docb\", \".xltm\", \".xls\", \".xltx\", \".xlsm\", \".xlsx\", \".xlt\", \".ppt\", \".pps\", \".pot\"].forEach(function (x) {\n            if (obj.filepath.endsWith(x)) {\n                obj.type = \"office\";\n                obj.state = true;\n\n                _self.info.executables += 1;\n            }\n        });\n\n        // Build JSTree JSON object\n        let data = {\n            text: obj.filename,\n            data: {},\n            a_attr: {}\n        };\n\n        if(obj.duplicate) {\n            obj.type = \"duplicate\";\n            obj.state = false;\n            data.a_attr.filetree_duplicate = \"true\";\n\n            _self.info.duplicates += 1;\n        }\n\n        if(obj.type == \"directory\"){\n            obj.opened = true;\n            _self.info.directories += 1;\n        } else if (obj.type == \"file\"){\n            _self.info.files += 1;\n        }\n\n        if(obj.type != \"directory\") {\n            data.data.mime = obj.mime;\n            data.data.size = obj.size;\n            data.data.magic = obj.magic;\n\n            if(entry.children.length >= 1) {\n                obj.type = \"container\";\n                obj.opened = true;\n                _self.info.containers += 1;\n            }\n        }\n\n        data.a_attr.filetree_type = obj.type;\n        data.type = obj.type;\n        data.state = {\n            selected: obj.state,\n            opened: obj.opened\n        };\n        \n        // Recurse for child entries (make jstree leafs)\n        if(entry.children.length >= 1){\n            entry.children.forEach(function(e){\n                if(!data.hasOwnProperty(\"children\")) { data.children = []; }\n                data.children.push(_self._convert_entry(e));\n            })\n        }\n\n        return data;\n    }\n\n    /**\n     * Init the table\n     */\n    init(){\n        $(this.sel_target).empty();\n\n        let data = this.data;\n\n        // Convert the data from the `sflock` format to jstree JSON data if necessary\n        if(this._convert_data){\n            var data_tmp = [];\n            for (var key in data) {\n                if (data.hasOwnProperty(key)) {\n                    let converted = this._convert_entry(data[key]);\n                    data_tmp.push(converted);\n                }\n            }\n\n            data = data_tmp;\n        }\n\n        $(this.sel_target).jstree({\n            core: {\n                data: data,\n                \"multiple\" : true,\n                \"animation\" : 0,\n                \"themes\": {\n                    \"name\": \"default-dark\"\n                }\n            },\n            types: {\n                \"container\": {\n                    \"icon\": \"fa fa-file-archive-o\"\n                },\n                \"file\": {\n                    \"icon\": \"fa fa-file-o\"\n                },\n                \"exec\": {\n                    \"icon\": \"fa fa-file-text\"\n                },\n                \"office\": {\n                    \"icon\": \"fa fa-file-word-o\"\n                },\n                \"duplicate\": {\n                    \"icon\": \"fa fa-ban\"\n                }\n            },\n            grid: {\n                columns: [\n                    {width: \"auto\", header: \"File\"},\n                    {width: \"auto\", header: \"Mime\", value: \"mime\"},\n                    {width: \"auto\", header: \"Size\", value: \"size\"},\n                    {width: \"10px\", header: \"Magic\", value: \"magic\"}\n                ],\n                resizable: true\n            },\n            plugins: [\"themes\", \"types\", \"checkbox\", \"grid\", \"wholerow\"]\n        })\n//        .on(\"open_node.jstree\", function (e, data) {\n//            data.instance.set_icon(data.node, \"fa fa-file-archive-o\");\n//        }).on(\"close_node.jstree\", function (e, data) {\n//            data.instance.set_icon(data.node, \"fa fa-file-archive-o\");\n//        })\n        ;\n\n    }\n\n    /**\n     * Programtically toggles the highlight of a jstree item\n     * @param {Object} [obj] - A jQuery object of a `a.jstree-grid.col-0` selector\n     * @param {String} [file_category] - \"files\", \"containers\", \"exec\"\n     * @param {Boolean} [highlight] - Wether to highlight or not\n     */\n    static highlight(obj, file_category, highlight){\n        let item_type = obj.attr(\"filetree_type\");\n        let item_dup = obj.attr(\"filetree_duplicate\");\n\n        if(file_category == \"files\"){\n            if(item_type != \"directory\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"exec\"){\n            if(item_type == \"exec\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"containers\"){\n            if(item_type == \"container\" || item_type == \"office\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"duplicates\"){\n             if(item_dup == \"true\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        }\n    }\n}"]}