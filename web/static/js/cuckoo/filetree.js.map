{"version":3,"sources":["src/filetree.js"],"names":[],"mappings":"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","file":"filetree.js","sourcesContent":["/*\n * Copyright (C) 2010-2013 Claudio Guarnieri.\n * Copyright (C) 2014-2016 Cuckoo Foundation.\n * This file is part of Cuckoo Sandbox - http://www.cuckoosandbox.org\n * See the file 'docs/LICENSE' for copying permission.\n *\n */\n\nclass FileTree {\n    constructor(target, data, sflock, draw_callback) {\n        this.sel_target = target;\n        this.data = data;\n        this._draw_callback = draw_callback;\n        this._convert_from_sflock = sflock;\n\n        this._filters = {\n            simplify_mime: true,\n            simplify_magic: true,\n            simplify_sizes: true,\n            deselect_duplicates: true\n        };\n\n        this.stats = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0\n        };\n    }\n\n    /**\n     * Draws the table\n     */\n    draw(){\n        if (!this.sel_target) throw \"drawtarget needed\";\n\n        this._init();\n        this._draw_callback();\n    }\n\n    refresh(){\n        this._reset_stats();\n        let data = null;\n\n        if(this._convert_from_sflock) {\n            data = this._convert_sflock();\n        } else {\n            data = this.data;\n        }\n\n        $(this.sel_target).jstree(true).settings.core.data = data;\n        $(this.sel_target).jstree(true).refresh();\n\n        this._draw_callback();\n    }\n\n    /**\n     * Init the table\n     */\n    _init(){\n        let data = null;\n\n        if(this._convert_from_sflock) {\n            data = this._convert_sflock();\n        } else {\n            data = this.data;\n        }\n        \n        let theme_active = Cookies.get(\"theme\");\n        let themes = {\"name\": \"default\"};\n\n        if(theme_active == \"night\"){\n            themes[\"name\"] = \"default-dark\"\n        }\n\n        $(this.sel_target).jstree({\n            core: {\n                data: data,\n                \"multiple\" : true,\n                \"animation\" : 0,\n                \"themes\": themes\n            },\n            types: {\n                \"container\": {\n                    \"icon\": \"fa fa-file-archive-o\"\n                },\n                \"file\": {\n                    \"icon\": \"fa fa-file-o\"\n                },\n                \"exec\": {\n                    \"icon\": \"fa fa-file-text\"\n                },\n                \"office\": {\n                    \"icon\": \"fa fa-file-word-o\"\n                },\n                \"duplicate\": {\n                    \"icon\": \"fa fa-ban\"\n                }\n            },\n            grid: {\n                columns: [\n                    {width: \"auto\", header: \"File\"},\n                    {width: \"auto\", header: \"Mime\", value: \"mime\"},\n                    {width: \"auto\", header: \"Size\", value: \"size\"},\n                    {width: \"10px\", header: \"Magic\", value: \"magic\"}\n                ],\n                resizable: true\n            },\n            plugins: [\"themes\", \"types\", \"checkbox\", \"grid\", \"wholerow\"]\n        });\n\n        $(this.sel_target).bind(\"ready.jstree\", function(){\n            let sel_wrapper = $(\".jstree-grid-wrapper\");\n            sel_wrapper.css(\"min-height\", sel_wrapper.outerHeight());\n        });\n    }\n\n    /**\n     * Convert data from the `sflock` format to JSTree\n     * @private\n     */\n    _convert_sflock(){\n        let data = $.extend({}, this.data);  //shallow copy\n\n        let data_tmp = [];\n        for (let key in data) {\n            if (data.hasOwnProperty(key)) {\n                let converted = this._convert_entry(data[key]);\n                data_tmp.push(converted);\n            }\n        }\n\n        return data_tmp;\n    }\n\n    _convert_entry(entry){\n        let _self = this;\n\n        // Temporary object\n        let obj = {\n            filepath: entry.filepath,\n            filename: entry.filename,\n            type: entry.type,\n            state: false, // pre-selected tree item\n            size: entry.size,\n            duplicate: entry.duplicate,\n            opened: false,\n            description: entry.description\n        };\n\n        if(obj.description != \"dir\"){\n            if(this._filters.simplify_magic){\n                obj.magic = entry.finger.magic_human;\n            } else {\n                obj.magic = entry.finger.magic;\n            }\n\n            if(this._filters.simplify_mime){\n                obj.mime = entry.finger.mime_human;\n            } else{ obj.mime = entry.finger.mime; }\n\n        }\n\n        // Sanitize object properties\n        if(obj.magic){\n            if(obj.magic.length >= 170){ obj.magic = `${obj.magic.substring(0, 170)}...`; }\n        } else {\n            obj.magic = \"empty\";\n        }\n\n        [\".exe\", \".pdf\", \".vbs\", \".vba\", \".bat\", \".py\", \".pyc\", \".pl\", \".rb\", \"js\", \".jse\"].forEach(function (x) {\n            if (obj.filepath.endsWith(x)) {\n                obj.type = \"exec\";\n                obj.state = true;\n\n                _self.stats.executables += 1;\n            }\n        });\n\n        [\".doc\", \".docx\", \".docm\", \".dotx\", \".dotm\", \".docb\", \".xltm\", \".xls\", \".xltx\", \".xlsm\", \".xlsx\", \".xlt\", \".ppt\", \".pps\", \".pot\"].forEach(function (x) {\n            if (obj.filepath.endsWith(x)) {\n                obj.type = \"office\";\n                obj.state = true;\n\n                _self.stats.executables += 1;\n            }\n        });\n\n        // Build the JSTree JSON return object\n        let data = {\n            text: obj.filename,\n            data: {},\n            a_attr: {}\n        };\n\n        data.a_attr.filepath = obj.filepath;\n        data.a_attr.sha256 = entry.sha256;\n\n        if(obj.duplicate) {\n            obj.type = \"duplicate\";\n\n            // Deselect duplicate file entries depending on the filter settings\n            if(this._filters.deselect_duplicates){\n                obj.state = false;\n            }\n\n            // Set class for CSS\n            data.a_attr.filetree_duplicate = \"true\";\n\n            // Update stats\n            _self.stats.duplicates += 1;\n        }\n\n        if(obj.description == \"dir\"){\n            obj.opened = true;\n            obj.type = \"directory\";\n            _self.stats.directories += 1;\n        }\n\n        if(obj.type != \"directory\") {\n            data.data.mime = obj.mime;\n            data.data.size = obj.size;\n            data.data.magic = obj.magic;\n\n            _self.stats.files += 1;\n\n            if(entry.children.length >= 1) {\n                obj.type = \"container\";\n                obj.opened = true;\n                _self.stats.containers += 1;\n            }\n        }\n\n        data.a_attr.filetree_type = obj.type;\n        data.type = obj.type;\n        data.state = {\n            selected: obj.state,\n            opened: obj.opened\n        };\n\n        // Recurse this function for the child entries\n        if(entry.children.length >= 1){\n            entry.children.forEach(function(e){\n                if(!data.hasOwnProperty(\"children\")) { data.children = []; }\n                data.children.push(_self._convert_entry(e));\n            })\n        }\n\n        return data;\n    }\n\n    _reset_stats(){\n        this.stats = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0\n        };\n    }\n\n    /**\n     * Programtically toggles the highlight of a jstree item\n     * @param {Object} [obj] - A jQuery object of a `a.jstree-grid.col-0` selector\n     * @param {String} [file_category] - \"files\", \"containers\", \"exec\"\n     * @param {Boolean} [highlight] - Wether to highlight or not\n     */\n    static highlight(obj, file_category, highlight){\n        let item_type = obj.attr(\"filetree_type\");\n        let item_dup = obj.attr(\"filetree_duplicate\");\n\n        if(file_category == \"files\"){\n            if(item_type != \"directory\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"exec\"){\n            if(item_type == \"exec\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"containers\"){\n            if(item_type == \"container\" || item_type == \"office\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"duplicates\"){\n             if(item_dup == \"true\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        }\n    }\n\n    selected(){\n        let files = [];\n        $(this.sel_target).jstree(\"get_checked\",true,true).forEach(function(e){\n            files.push({\n                \"filepath\": e.a_attr.filepath,\n                \"filename\": e.text,\n                \"sha256\": e.a_attr.sha256\n            });\n        });\n\n       return files;\n    }\n\n    simplify(state){\n        this._filters.simplify_mime = state;\n        this._filters.simplify_sizes = state;\n        this._filters.simplify_magic = state;\n\n        this.refresh();\n    }\n\n    duplicates(state){\n        this._filters.deselect_duplicates = state;\n\n        this.refresh();\n    }\n}"]}