{"version":3,"sources":["filetree.js"],"names":["FileTree","target","data","sflock","draw_callback","sel_target","_draw_callback","_convert_from_sflock","_filters","simplify_mime","simplify_magic","simplify_sizes","deselect_duplicates","stats","duplicates","files","containers","directories","executables","_init","_reset_stats","_convert_sflock","$","jstree","settings","core","refresh","theme_active","Cookies","get","themes","checkbox","three_state","cascade","types","grid","columns","width","header","value","resizable","plugins","bind","sel_wrapper","css","outerHeight","extend","data_tmp","key","hasOwnProperty","entry","converted","type","_convert_entry","filename","push","parent_archive","_self","obj","filepath","relapath","extrpath","state","size","duplicate","opened","description","join","magic","finger","magic_human","mime","mime_human","CuckooWeb","human_size","length","substring","forEach","x","endsWith","selected","text","a_attr","unshift","sha256","package","filetree_duplicate","children","filetree_type","e","file_category","highlight","item_type","attr","item_dup","addClass","removeClass"],"mappings":"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","file":"filetree.js","sourcesContent":["/*\n * Copyright (C) 2010-2013 Claudio Guarnieri.\n * Copyright (C) 2014-2016 Cuckoo Foundation.\n * This file is part of Cuckoo Sandbox - http://www.cuckoosandbox.org\n * See the file 'docs/LICENSE' for copying permission.\n *\n */\n\nclass FileTree {\n    constructor(target, data, sflock, draw_callback) {\n        this.sel_target = target;\n        this.data = data;\n        this._draw_callback = draw_callback;\n        this._convert_from_sflock = sflock;\n\n        this._filters = {\n            simplify_mime: true,\n            simplify_magic: true,\n            simplify_sizes: true,\n            deselect_duplicates: true\n        };\n\n        this.stats = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0\n        };\n    }\n\n    /**\n     * Draws the table\n     */\n    draw(){\n        if (!this.sel_target) throw \"drawtarget needed\";\n\n        this._init();\n        this._draw_callback();\n    }\n\n    refresh(){\n        this._reset_stats();\n        let data = null;\n\n        if(this._convert_from_sflock) {\n            data = this._convert_sflock();\n        } else {\n            data = this.data;\n        }\n\n        $(this.sel_target).jstree(true).settings.core.data = data;\n        $(this.sel_target).jstree(true).refresh();\n\n        this._draw_callback();\n    }\n\n    /**\n     * Init the table\n     */\n    _init(){\n        let data = null;\n\n        if(this._convert_from_sflock) {\n            data = this._convert_sflock();\n        } else {\n            data = this.data;\n        }\n        \n        let theme_active = Cookies.get(\"theme\");\n        let themes = {\"name\": \"default\"};\n\n        if(theme_active == \"night\" || theme_active == \"cyborg\"){\n            themes[\"name\"] = \"default-dark\"\n        }\n\n        $(this.sel_target).jstree({\n            core: {\n                data: data,\n                \"multiple\" : true,\n                \"animation\" : 0,\n                \"themes\": themes\n            },\n            checkbox : {\n                three_state : false,\n                cascade : 'undetermined'\n            },\n            types: {\n                \"container\": {\n                    \"icon\": \"fa fa-file-archive-o\"\n                },\n                \"file\": {\n                    \"icon\": \"fa fa-file-o\"\n                },\n                \"exec\": {\n                    \"icon\": \"fa fa-file-text\"\n                },\n                \"office\": {\n                    \"icon\": \"fa fa-file-word-o\"\n                },\n                \"duplicate\": {\n                    \"icon\": \"fa fa-ban\"\n                }\n            },\n            grid: {\n                columns: [\n                    {width: \"auto\", header: \"File\"},\n                    {width: \"auto\", header: \"Package\", value: \"package\"},\n                    {width: \"auto\", header: \"Mime\", value: \"mime\"},\n                    {width: \"auto\", header: \"Size\", value: \"size\"},\n                    {width: \"10px\", header: \"Magic\", value: \"magic\"}\n                ],\n                resizable: true\n            },\n            plugins: [\"themes\", \"types\", \"checkbox\", \"grid\", \"wholerow\"]\n        });\n\n        $(this.sel_target).bind(\"ready.jstree\", function(){\n            let sel_wrapper = $(\".jstree-grid-wrapper\");\n            sel_wrapper.css(\"min-height\", sel_wrapper.outerHeight());\n        });\n    }\n\n    /**\n     * Convert data from the `sflock` format to JSTree\n     * @private\n     */\n    _convert_sflock(){\n        let data = $.extend({}, this.data);  //shallow copy\n\n        let data_tmp = [];\n        for (let key in data) {\n            if (data.hasOwnProperty(key)) {\n                let entry = data[key];\n                let converted;\n\n                if(entry.hasOwnProperty(\"type\") && entry.type == \"container\"){\n                    converted = this._convert_entry(data[key], entry.filename);\n                } else {\n                    converted = this._convert_entry(data[key], \"\");\n                }\n\n                data_tmp.push(converted);\n            }\n        }\n\n        return data_tmp;\n    }\n\n    _convert_entry(entry, parent_archive){\n        let _self = this;\n\n        // Temporary object\n        let obj = {\n            filepath: entry.filepath,\n            filename: entry.filename,\n            relapath: entry.relapath,\n            extrpath: entry.extrpath ? entry.extrpath : [],\n            type: entry.type,\n            state: false, // pre-selected tree item\n            size: entry.size,\n            duplicate: entry.duplicate,\n            opened: false,\n            description: entry.description\n        };\n\n        if(obj.extrpath){\n            obj.filepath = `${parent_archive}/${obj.extrpath.join(\"/\")}`;\n        } else if(!obj.filepath && obj.relapath){\n            obj.filepath = obj.relapath;\n        } else if (!obj.relapath){\n            obj.relapath = obj.filepath;\n        }\n\n        if(obj.type != \"directory\"){\n            // simplify filters\n            if(this._filters.simplify_magic){\n                obj.magic = entry.finger.magic_human;\n            } else {\n                obj.magic = entry.finger.magic;\n            }\n\n            if(this._filters.simplify_mime){\n                obj.mime = entry.finger.mime_human;\n            } else{ obj.mime = entry.finger.mime; }\n\n            if(this._filters.simplify_sizes){\n                obj.size = CuckooWeb.human_size(obj.size, true);\n            }\n\n            // Sanitize object properties\n            if(obj.magic){\n                if(obj.magic.length >= 170){ obj.magic = `${obj.magic.substring(0, 170)}...`; }\n            } else {\n                obj.magic = \"empty\";\n            }\n\n            [\".exe\", \".pdf\", \".vbs\", \".vba\", \".bat\", \".py\", \".pyc\", \".pl\", \".rb\", \".js\", \".jse\"].forEach(function (x) {\n                if (obj.filepath.endsWith(x)) {\n                    obj.type = \"exec\";\n                    obj.state = true;\n\n                    _self.stats.executables += 1;\n                }\n            });\n\n            [\".doc\", \".docx\", \".docm\", \".dotx\", \".dotm\", \".docb\", \".xltm\", \".xls\", \".xltx\", \".xlsm\", \".xlsx\", \".xlt\", \".ppt\", \".pps\", \".pot\"].forEach(function (x) {\n                if (obj.filepath.endsWith(x)) {\n                    obj.type = \"office\";\n                    obj.state = true;\n\n                    _self.stats.executables += 1;\n                }\n            });\n\n            if(entry.selected) {\n                obj.state = true;\n                _self.stats.executables += 1;\n            }\n        }\n\n        // Build JSTree JSON return object\n        let data = {\n            text: obj.filename,\n            data: {},\n            a_attr: {}\n        };\n\n        data.a_attr.filepath = obj.extrpath.unshift(parent_archive) ? obj.extrpath : [obj.filepath];\n        data.a_attr.sha256 = entry.sha256;\n        data.a_attr.package = entry.package;\n        data.a_attr.type = entry.type;\n\n        if(obj.duplicate) {\n            obj.type = \"duplicate\";\n\n            // Deselect duplicate file entries depending on the filter settings\n            if(this._filters.deselect_duplicates){\n                obj.state = false;\n            }\n\n            // Set class for CSS\n            data.a_attr.filetree_duplicate = \"true\";\n\n            // Update stats\n            _self.stats.duplicates += 1;\n        }\n\n        if(entry.hasOwnProperty(\"package\")){\n            data.data.package = entry.package;\n        }\n\n        if(obj.type == \"directory\"){\n            obj.opened = true;\n            obj.type = \"directory\";\n            _self.stats.directories += 1;\n        } else {\n            data.data.mime = obj.mime;\n            data.data.size = obj.size;\n            data.data.magic = obj.magic;\n\n            _self.stats.files += 1;\n\n            if(entry.children.length >= 1) {\n                obj.type = \"container\";\n                obj.opened = true;\n                _self.stats.containers += 1;\n            }\n        }\n\n        data.a_attr.filetree_type = obj.type;\n        data.type = entry.type;\n        data.state = {\n            selected: obj.state,\n            opened: obj.opened\n        };\n\n        // Recurse this function for the child entries\n        if(entry.children.length >= 1){\n            entry.children.forEach(function(e){\n                if(!data.hasOwnProperty(\"children\")) { data.children = []; }\n                data.children.push(_self._convert_entry(e, parent_archive));\n            })\n        }\n\n        return data;\n    }\n\n    _reset_stats(){\n        this.stats = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0\n        };\n    }\n\n    /**\n     * Programtically toggles the highlight of a jstree item\n     * @param {Object} [obj] - A jQuery object of a `a.jstree-grid.col-0` selector\n     * @param {String} [file_category] - \"files\", \"containers\", \"exec\"\n     * @param {Boolean} [highlight] - Whether to highlight or not\n     */\n    static highlight(obj, file_category, highlight){\n        let item_type = obj.attr(\"filetree_type\");\n        let item_dup = obj.attr(\"filetree_duplicate\");\n\n        if(file_category == \"files\"){\n            if(item_type != \"directory\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"exec\"){\n            if(item_type == \"exec\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"containers\"){\n            if(item_type == \"container\" || item_type == \"office\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"duplicates\"){\n             if(item_dup == \"true\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        }\n    }\n\n    selected(){\n        let files = [];\n        $(this.sel_target).jstree(\"get_checked\",true,true).forEach(function(e){\n            if(!e.a_attr.hasOwnProperty(\"filetree_type\")  ||\n                e.a_attr.filetree_type == \"directory\"){\n                return true;\n            }\n\n            files.push({\n                \"filepath\": e.a_attr.filepath,\n                \"filename\": e.text,\n                \"sha256\": e.a_attr.sha256,\n                \"type\": e.a_attr.type,\n                \"package\": e.a_attr.package\n            });\n        });\n\n       return files;\n    }\n\n    simplify(state){\n        this._filters.simplify_mime = state;\n        this._filters.simplify_sizes = state;\n        this._filters.simplify_magic = state;\n\n        this.refresh();\n    }\n\n    duplicates(state){\n        this._filters.deselect_duplicates = state;\n\n        this.refresh();\n    }\n}"]}