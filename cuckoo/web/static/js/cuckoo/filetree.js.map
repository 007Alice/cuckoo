{"version":3,"sources":["src/filetree.js"],"names":[],"mappings":"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","file":"filetree.js","sourcesContent":["/*\n * Copyright (C) 2010-2013 Claudio Guarnieri.\n * Copyright (C) 2014-2016 Cuckoo Foundation.\n * This file is part of Cuckoo Sandbox - http://www.cuckoosandbox.org\n * See the file 'docs/LICENSE' for copying permission.\n *\n */\n\nclass FileTree {\n    constructor(target, data, sflock, draw_callback) {\n        this.sel_target = target;\n        this.data = data;\n        this._draw_callback = draw_callback;\n        this._convert_from_sflock = sflock;\n\n        this._filters = {\n            simplify_mime: true,\n            simplify_magic: true,\n            simplify_sizes: true,\n            deselect_duplicates: true\n        };\n\n        this.stats = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0\n        };\n    }\n\n    /**\n     * Draws the table\n     */\n    draw(){\n        if (!this.sel_target) throw \"drawtarget needed\";\n\n        this._init();\n        this._draw_callback();\n    }\n\n    refresh(){\n        this._reset_stats();\n        let data = null;\n\n        if(this._convert_from_sflock) {\n            data = this._convert_sflock();\n        } else {\n            data = this.data;\n        }\n\n        $(this.sel_target).jstree(true).settings.core.data = data;\n        $(this.sel_target).jstree(true).refresh();\n\n        this._draw_callback();\n    }\n\n    /**\n     * Init the table\n     */\n    _init(){\n        let data = null;\n\n        if(this._convert_from_sflock) {\n            data = this._convert_sflock();\n        } else {\n            data = this.data;\n        }\n        \n        let theme_active = Cookies.get(\"theme\");\n        let themes = {\"name\": \"default\"};\n\n        if(theme_active == \"night\" || theme_active == \"cyborg\"){\n            themes[\"name\"] = \"default-dark\"\n        }\n\n        $(this.sel_target).jstree({\n            core: {\n                data: data,\n                \"multiple\" : true,\n                \"animation\" : 0,\n                \"themes\": themes\n            },\n            checkbox : {\n                three_state : false,\n                cascade : 'undetermined'\n            },\n            types: {\n                \"container\": {\n                    \"icon\": \"fa fa-file-archive-o\"\n                },\n                \"file\": {\n                    \"icon\": \"fa fa-file-o\"\n                },\n                \"exec\": {\n                    \"icon\": \"fa fa-file-text\"\n                },\n                \"office\": {\n                    \"icon\": \"fa fa-file-word-o\"\n                },\n                \"duplicate\": {\n                    \"icon\": \"fa fa-ban\"\n                }\n            },\n            grid: {\n                columns: [\n                    {width: \"auto\", header: \"File\"},\n                    {width: \"auto\", header: \"Package\", value: \"package\"},\n                    {width: \"auto\", header: \"Mime\", value: \"mime\"},\n                    {width: \"auto\", header: \"Size\", value: \"size\"},\n                    {width: \"10px\", header: \"Magic\", value: \"magic\"}\n                ],\n                resizable: true\n            },\n            plugins: [\"themes\", \"types\", \"checkbox\", \"grid\", \"wholerow\"]\n        });\n\n        $(this.sel_target).bind(\"ready.jstree\", function(){\n            let sel_wrapper = $(\".jstree-grid-wrapper\");\n            sel_wrapper.css(\"min-height\", sel_wrapper.outerHeight());\n        });\n    }\n\n    /**\n     * Convert data from the `sflock` format to JSTree\n     * @private\n     */\n    _convert_sflock(){\n        let data = $.extend({}, this.data);  //shallow copy\n\n        let data_tmp = [];\n        for (let key in data) {\n            if (data.hasOwnProperty(key)) {\n                let entry = data[key];\n                let converted;\n\n                if(entry.hasOwnProperty(\"type\") && entry.type == \"container\"){\n                    converted = this._convert_entry(data[key], entry.filename);\n                } else {\n                    converted = this._convert_entry(data[key], \"\");\n                }\n\n                data_tmp.push(converted);\n            }\n        }\n\n        return data_tmp;\n    }\n\n    _convert_entry(entry, parent_archive){\n        let _self = this;\n\n        // Temporary object\n        let obj = {\n            filepath: entry.filepath,\n            filename: entry.filename,\n            relapath: entry.relapath,\n            extrpath: entry.extrpath ? entry.extrpath : [],\n            type: entry.type,\n            state: false, // pre-selected tree item\n            size: entry.size,\n            duplicate: entry.duplicate,\n            opened: false,\n            description: entry.description\n        };\n\n        if(obj.extrpath){\n            obj.filepath = `${parent_archive}/${obj.extrpath.join(\"/\")}`;\n        } else if(!obj.filepath && obj.relapath){\n            obj.filepath = obj.relapath;\n        } else if (!obj.relapath){\n            obj.relapath = obj.filepath;\n        }\n\n        if(obj.type != \"directory\"){\n            // simplify filters\n            if(this._filters.simplify_magic){\n                obj.magic = entry.finger.magic_human;\n            } else {\n                obj.magic = entry.finger.magic;\n            }\n\n            if(this._filters.simplify_mime){\n                obj.mime = entry.finger.mime_human;\n            } else{ obj.mime = entry.finger.mime; }\n\n            if(this._filters.simplify_sizes){\n                obj.size = CuckooWeb.human_size(obj.size, true);\n            }\n\n            // Sanitize object properties\n            if(obj.magic){\n                if(obj.magic.length >= 170){ obj.magic = `${obj.magic.substring(0, 170)}...`; }\n            } else {\n                obj.magic = \"empty\";\n            }\n\n            [\".exe\", \".pdf\", \".vbs\", \".vba\", \".bat\", \".py\", \".pyc\", \".pl\", \".rb\", \".js\", \".jse\"].forEach(function (x) {\n                if (obj.filepath.endsWith(x)) {\n                    obj.type = \"exec\";\n                    obj.state = true;\n\n                    _self.stats.executables += 1;\n                }\n            });\n\n            [\".doc\", \".docx\", \".docm\", \".dotx\", \".dotm\", \".docb\", \".xltm\", \".xls\", \".xltx\", \".xlsm\", \".xlsx\", \".xlt\", \".ppt\", \".pps\", \".pot\"].forEach(function (x) {\n                if (obj.filepath.endsWith(x)) {\n                    obj.type = \"office\";\n                    obj.state = true;\n\n                    _self.stats.executables += 1;\n                }\n            });\n\n            if(entry.selected) {\n                obj.state = true;\n                _self.stats.executables += 1;\n            }\n        }\n\n        // Build JSTree JSON return object\n        let data = {\n            text: obj.filename,\n            data: {},\n            a_attr: {}\n        };\n\n        data.a_attr.filepath = obj.extrpath.unshift(parent_archive) ? obj.extrpath : [obj.filepath];\n        data.a_attr.sha256 = entry.sha256;\n        data.a_attr.package = entry.package;\n        data.a_attr.type = entry.type;\n\n        if(obj.duplicate) {\n            obj.type = \"duplicate\";\n\n            // Deselect duplicate file entries depending on the filter settings\n            if(this._filters.deselect_duplicates){\n                obj.state = false;\n            }\n\n            // Set class for CSS\n            data.a_attr.filetree_duplicate = \"true\";\n\n            // Update stats\n            _self.stats.duplicates += 1;\n        }\n\n        if(entry.hasOwnProperty(\"package\")){\n            data.data.package = entry.package;\n        }\n\n        if(obj.type == \"directory\"){\n            obj.opened = true;\n            obj.type = \"directory\";\n            _self.stats.directories += 1;\n        } else {\n            data.data.mime = obj.mime;\n            data.data.size = obj.size;\n            data.data.magic = obj.magic;\n\n            _self.stats.files += 1;\n\n            if(entry.children.length >= 1) {\n                obj.type = \"container\";\n                obj.opened = true;\n                _self.stats.containers += 1;\n            }\n        }\n\n        data.a_attr.filetree_type = obj.type;\n        data.type = entry.type;\n        data.state = {\n            selected: obj.state,\n            opened: obj.opened\n        };\n\n        // Recurse this function for the child entries\n        if(entry.children.length >= 1){\n            entry.children.forEach(function(e){\n                if(!data.hasOwnProperty(\"children\")) { data.children = []; }\n                data.children.push(_self._convert_entry(e, parent_archive));\n            })\n        }\n\n        return data;\n    }\n\n    _reset_stats(){\n        this.stats = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0\n        };\n    }\n\n    /**\n     * Programtically toggles the highlight of a jstree item\n     * @param {Object} [obj] - A jQuery object of a `a.jstree-grid.col-0` selector\n     * @param {String} [file_category] - \"files\", \"containers\", \"exec\"\n     * @param {Boolean} [highlight] - Whether to highlight or not\n     */\n    static highlight(obj, file_category, highlight){\n        let item_type = obj.attr(\"filetree_type\");\n        let item_dup = obj.attr(\"filetree_duplicate\");\n\n        if(file_category == \"files\"){\n            if(item_type != \"directory\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"exec\"){\n            if(item_type == \"exec\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"containers\"){\n            if(item_type == \"container\" || item_type == \"office\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"duplicates\"){\n             if(item_dup == \"true\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        }\n    }\n\n    selected(){\n        let files = [];\n        $(this.sel_target).jstree(\"get_checked\",true,true).forEach(function(e){\n            if(!e.a_attr.hasOwnProperty(\"filetree_type\")  ||\n                e.a_attr.filetree_type == \"directory\"){\n                return true;\n            }\n\n            files.push({\n                \"filepath\": e.a_attr.filepath,\n                \"filename\": e.text,\n                \"sha256\": e.a_attr.sha256,\n                \"type\": e.a_attr.type,\n                \"package\": e.a_attr.package\n            });\n        });\n\n       return files;\n    }\n\n    simplify(state){\n        this._filters.simplify_mime = state;\n        this._filters.simplify_sizes = state;\n        this._filters.simplify_magic = state;\n\n        this.refresh();\n    }\n\n    duplicates(state){\n        this._filters.deselect_duplicates = state;\n\n        this.refresh();\n    }\n}"]}