{"version":3,"sources":["filetree.js"],"names":["FileTree","target","data","sflock","draw_callback","sel_target","_draw_callback","_convert_from_sflock","_filters","simplify_mime","simplify_magic","simplify_sizes","deselect_duplicates","stats","duplicates","files","containers","directories","executables","urls","_init","_reset_stats","_convert_sflock","$","jstree","settings","core","refresh","theme_active","Cookies","get","themes","checkbox","three_state","cascade","types","grid","columns","width","header","value","resizable","plugins","bind","sel_wrapper","css","outerHeight","extend","data_tmp","key","hasOwnProperty","entry","converted","type","_convert_entry","filename","push","parent_archive","_self","size","extrpath","filepath","join","relapath","text","a_attr","sha256","package","opened","state","mime","magic","finger","magic_human","mime_human","String","CuckooWeb","human_size","length","substring","forEach","x","endsWith","selected","duplicate","filetree_duplicate","unshift","children","filetree_type","e","obj","file_category","highlight","item_type","attr","item_dup","addClass","removeClass"],"mappings":"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","file":"filetree.js","sourcesContent":["/*\n * Copyright (C) 2010-2013 Claudio Guarnieri.\n * Copyright (C) 2014-2016 Cuckoo Foundation.\n * This file is part of Cuckoo Sandbox - http://www.cuckoosandbox.org\n * See the file 'docs/LICENSE' for copying permission.\n *\n */\n\nclass FileTree {\n    constructor(target, data, sflock, draw_callback) {\n        this.sel_target = target;\n        this.data = data;\n        this._draw_callback = draw_callback;\n        this._convert_from_sflock = sflock;\n\n        this._filters = {\n            simplify_mime: true,\n            simplify_magic: true,\n            simplify_sizes: true,\n            deselect_duplicates: true\n        };\n\n        this.stats = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0,\n            urls: 0\n        };\n    }\n\n    /**\n     * Draws the table\n     */\n    draw(){\n        if (!this.sel_target) throw \"drawtarget needed\";\n\n        this._init();\n        this._draw_callback();\n    }\n\n    refresh(){\n        this._reset_stats();\n        let data = null;\n\n        if(this._convert_from_sflock) {\n            data = this._convert_sflock();\n        } else {\n            data = this.data;\n        }\n\n        $(this.sel_target).jstree(true).settings.core.data = data;\n        $(this.sel_target).jstree(true).refresh();\n\n        this._draw_callback();\n    }\n\n    /**\n     * Init the table\n     */\n    _init(){\n        let data = null;\n\n        if(this._convert_from_sflock) {\n            data = this._convert_sflock();\n        } else {\n            data = this.data;\n        }\n        \n        let theme_active = Cookies.get(\"theme\");\n        let themes = {\"name\": \"default\"};\n\n        if(theme_active == \"night\" || theme_active == \"cyborg\"){\n            themes[\"name\"] = \"default-dark\"\n        }\n\n        $(this.sel_target).jstree({\n            core: {\n                data: data,\n                \"multiple\" : true,\n                \"animation\" : 0,\n                \"themes\": themes\n            },\n            checkbox : {\n                three_state : false,\n                cascade : 'undetermined'\n            },\n            types: {\n                \"container\": {\n                    \"icon\": \"fa fa-file-archive-o\"\n                },\n                \"file\": {\n                    \"icon\": \"fa fa-file-o\"\n                },\n                \"exec\": {\n                    \"icon\": \"fa fa-file-text\"\n                },\n                \"office\": {\n                    \"icon\": \"fa fa-file-word-o\"\n                },\n                \"duplicate\": {\n                    \"icon\": \"fa fa-ban\"\n                },\n                \"url\": {\n                    \"icon\": \"fa fa-external-link\"\n                }\n            },\n            grid: {\n                columns: [\n                    {width: \"auto\", header: \"File\"},\n                    {width: \"auto\", header: \"Package\", value: \"package\"},\n                    {width: \"auto\", header: \"Mime\", value: \"mime\"},\n                    {width: \"auto\", header: \"Size\", value: \"size\"},\n                    {width: \"10px\", header: \"Magic\", value: \"magic\"}\n                ],\n                resizable: true\n            },\n            plugins: [\"themes\", \"types\", \"checkbox\", \"grid\", \"wholerow\"]\n        });\n\n        $(this.sel_target).bind(\"ready.jstree\", function(){\n            let sel_wrapper = $(\".jstree-grid-wrapper\");\n            sel_wrapper.css(\"min-height\", sel_wrapper.outerHeight());\n        });\n    }\n\n    /**\n     * Convert data from the `sflock` format to JSTree\n     * @private\n     */\n    _convert_sflock(){\n        let data = $.extend({}, this.data);  //shallow copy\n\n        let data_tmp = [];\n        for (let key in data) {\n            if (data.hasOwnProperty(key)) {\n                let entry = data[key];\n                let converted;\n\n                if(entry.hasOwnProperty(\"type\") && entry.type == \"container\"){\n                    converted = this._convert_entry(data[key], entry.filename);\n                } else {\n                    converted = this._convert_entry(data[key], \"\");\n                }\n\n                data_tmp.push(converted);\n            }\n        }\n\n        return data_tmp;\n    }\n\n    _convert_entry(entry, parent_archive){\n        let _self = this;\n\n        // Normalize entry object\n        if(entry.size === \"undefined\"){ entry.size = 0 }\n        entry.extrpath = entry.extrpath ? entry.extrpath : [];\n        if(entry.extrpath){\n            entry.filepath = `${parent_archive}/${entry.extrpath.join(\"/\")}`;\n        } else if(!entry.filepath && entry.relapath){\n            entry.filepath = entry.relapath;\n        } else if (!entry.relapath){\n            entry.relapath = entry.filepath;\n        }\n\n        // The JSTree return object\n        let data = {\n            text: entry.filename,\n            data: {},\n            a_attr: {\n                sha256: entry.sha256,\n                package: entry.package,\n                type: entry.type\n            }\n        };\n\n        if(entry.hasOwnProperty(\"package\")){\n            data.data.package = entry.package;\n        }\n\n        if(entry.type == \"directory\"){\n            entry.type = \"directory\";\n            entry.opened = true;\n            data.state = {\n                opened: entry.opened\n            };\n\n            _self.stats.directories += 1;\n        } else {\n            data.data.mime = entry.mime;\n            data.data.size = entry.size;\n            data.data.magic = entry.magic;\n\n            if(entry.type == \"url\"){\n                _self.stats.urls += 1;\n                _self.stats.files += 1;\n            } else {\n                _self.stats.files += 1;\n            }\n\n            // simplify filters\n            if(this._filters.simplify_magic){\n                entry.magic = entry.finger.magic_human;\n            } else {\n                entry.magic = entry.finger.magic;\n            }\n\n            if(this._filters.simplify_mime){\n                entry.mime = entry.finger.mime_human;\n            } else{ entry.mime = entry.finger.mime; }\n\n            if(this._filters.simplify_sizes && !entry.size instanceof String){\n                entry.size = CuckooWeb.human_size(entry.size, true);\n            }\n\n            // Sanitize object properties\n            if(entry.magic){\n                if(entry.magic.length >= 170){ entry.magic = `${entry.magic.substring(0, 170)}...`; }\n            } else {\n                entry.magic = \"Empty\";\n            }\n\n            [\".exe\", \".pdf\", \".vbs\", \".vba\", \".bat\", \".py\", \".pyc\", \".pl\", \".rb\", \".js\", \".jse\"].forEach(function (x) {\n                if (entry.filepath.endsWith(x)) {\n                    entry.type = \"exec\";\n                    entry.state = true;\n\n                    _self.stats.executables += 1;\n                }\n            });\n\n            [\".doc\", \".docx\", \".docm\", \".dotx\", \".dotm\", \".docb\", \".xltm\", \".xls\", \".xltx\", \".xlsm\", \".xlsx\", \".xlt\", \".ppt\", \".pps\", \".pot\"].forEach(function (x) {\n                if (entry.filepath.endsWith(x)) {\n                    entry.type = \"office\";\n                    entry.state = true;\n\n                    _self.stats.executables += 1;\n                }\n            });\n\n            entry.state = entry.selected;\n\n            if(entry.duplicate) {\n                entry.type = \"duplicate\";\n    \n                // Deselect duplicate file entries depending on the filter settings\n                if(this._filters.deselect_duplicates){\n                    entry.state = false;\n                }\n    \n                // Set class for CSS\n                data.a_attr.filetree_duplicate = \"true\";\n    \n                // Update stats\n                _self.stats.duplicates += 1;\n            }\n\n            data.a_attr.filepath = entry.extrpath.unshift(parent_archive) ? entry.extrpath : [entry.filepath];\n\n            if(entry.children.length >= 1) {\n                entry.type = \"container\";\n                entry.opened = true;\n                _self.stats.containers += 1;\n            }\n\n            data.a_attr.filetree_type = entry.type;\n            data.type = entry.type;\n            data.state = {\n                selected: entry.state,\n                opened: entry.opened\n            };\n        }\n\n        // Recurse this function for the child entries\n        if(entry.children.length >= 1){\n            entry.children.forEach(function(e){\n                if(!data.hasOwnProperty(\"children\")) { data.children = []; }\n                data.children.push(_self._convert_entry(e, parent_archive));\n            })\n        }\n\n        return data;\n    }\n\n    _reset_stats(){\n        this.stats = {\n            duplicates: 0,\n            files: 0,\n            containers: 0,\n            directories: 0,\n            executables: 0,\n            urls: 0\n        };\n    }\n\n    /**\n     * Programtically toggles the highlight of a jstree item\n     * @param {Object} [obj] - A jQuery object of a `a.jstree-grid.col-0` selector\n     * @param {String} [file_category] - \"files\", \"containers\", \"exec\"\n     * @param {Boolean} [highlight] - Whether to highlight or not\n     */\n    static highlight(obj, file_category, highlight){\n        let item_type = obj.attr(\"filetree_type\");\n        let item_dup = obj.attr(\"filetree_duplicate\");\n\n        if(file_category == \"files\"){\n            if(item_type != \"directory\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"exec\"){\n            if(item_type == \"exec\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"containers\"){\n            if(item_type == \"container\" || item_type == \"office\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"duplicates\"){\n             if(item_dup == \"true\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        } else if (file_category == \"urls\"){\n             if(item_type == \"url\"){\n                if(highlight) obj.addClass(\"highlight\");\n                else obj.removeClass(\"highlight\");\n            }\n        }\n    }\n\n    selected(){\n        let files = [];\n        $(this.sel_target).jstree(\"get_checked\",true,true).forEach(function(e){\n            if(!e.a_attr.hasOwnProperty(\"filetree_type\")  ||\n                e.a_attr.filetree_type == \"directory\"){\n                return true;\n            }\n\n            files.push({\n                \"filepath\": e.a_attr.filepath,\n                \"filename\": e.text,\n                \"sha256\": e.a_attr.sha256,\n                \"type\": e.a_attr.type,\n                \"package\": e.a_attr.package\n            });\n        });\n\n       return files;\n    }\n\n    simplify(state){\n        this._filters.simplify_mime = state;\n        this._filters.simplify_sizes = state;\n        this._filters.simplify_magic = state;\n\n        this.refresh();\n    }\n\n    duplicates(state){\n        this._filters.deselect_duplicates = state;\n        this.refresh();\n    }\n}"]}